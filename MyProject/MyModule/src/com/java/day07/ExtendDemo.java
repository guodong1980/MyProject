package com.java.day07;

/**
 * @author 郭栋
 * @create 2018-12-16 18:59
 * 继承
 * 1.方法重载(Overload)
 *  (1)方法名相同
 *  (2)方法的参数类型,个数,顺序至少有一个项不同
 *  (3)方法的返回类型可以不相同
 *  (4)方法的修饰符可以不相同
 * 2.方法的覆盖(Override)
 *  (1)子类方法的名称,参数签名和返回类型必须与父类方法相同
 *  (2)子类的方法不能小于父类方法的访问权限
 *  (3)子类的方法不能抛出的异常必须和父类方法抛出的异常相同,或者子类方法的异常是父类方法异常的子类
 *  (4)方法覆盖只能存在于子类和父类之间,在同一个类中的方法只能被重载,不能被覆盖
 *  (5)父类的静态方法不能被子类覆盖为非静态方法
 *  (6)子类可以定义与父类的静态方法同名的静态方法,以便在子类中隐藏父类的静态方法.
 *      即子类的实例调用子类的静态方法,父类的实例调用父类的静态方法,但子类和父类的实例都是调用子类的实例方法
 *  (7)父类的非静态方法,不能被子类覆盖为静态方法
 *  (8)父类的私有方法不能被子类覆盖
 *  (9)父类的抽象方法可以被子类实现父类的抽象方法或者重新声明父类的抽象方法
 * 3.方法的覆盖与方法的重载的异同
 *  (1)方法名都相同
 *  (2)都可用于抽象方法和非抽象方法之间
 *  (3)父类的一个方法只能被子类覆盖一次,而一个方法可以在所在的类中重载多次
 *  (4)方法的覆盖只能用于子类覆盖父类,方法的重载用于同一个类中所有方法(包括父类中继承来的)
 * 4.super关键字
 *  (1)当子类隐藏父类的成员变量和方法时,可以用super显示调用父类的变量和方法 super.父类方法和变量
 *
 */
public class ExtendDemo {
    public static void main(String[] args) {
        //继承
      /*  Base base = new Base(100, "小明");
        base.say(100, "小紅");
        base.say("小李");
        Sub sub = new Sub();
        sub.say("小强");
        sub.sayAge(500);*/

        //多态
        polymorphiscBase polymorphiscBase = new polymorphiscSub();
        polymorphiscBase.method();
        polymorphiscBase.staticMethod();
        ((polymorphiscSub) polymorphiscBase).subMethod();
    }
}
